INFO  05:39:32,908 - Compiling source file: C:\Users\andri\Desktop\pp1_domaci\workspace\MJCompiler\test\test301_A.mj
INFO  05:39:32,953 - #2 program
INFO  05:39:32,953 - #47 test301
INFO  05:39:32,953 - #47 int
INFO  05:39:32,954 - #47 x
INFO  05:39:32,954 - #44 ,
INFO  05:39:32,955 - #47 y
INFO  05:39:32,955 - #46 ;
INFO  05:39:32,955 - #47 bool
INFO  05:39:32,955 - #47 z
INFO  05:39:32,955 - #46 ;
INFO  05:39:32,956 - #39 {
INFO  05:39:32,956 - #13 void
INFO  05:39:32,956 - #47 main
INFO  05:39:32,956 - #37 (
INFO  05:39:32,957 - #38 )
INFO  05:39:32,957 - #39 {
INFO  05:39:32,958 - #47 x
INFO  05:39:32,958 - #23 =
INFO  05:39:32,958 - #48 1
INFO  05:39:32,959 - #46 ;
INFO  05:39:32,960 - #6 if
INFO  05:39:32,960 - #37 (
INFO  05:39:32,961 - #47 x
INFO  05:39:32,961 - #30 !=
INFO  05:39:32,961 - #48 1
INFO  05:39:32,963 - #38 )
INFO  05:39:32,963 - #47 x
INFO  05:39:32,963 - #23 =
INFO  05:39:32,964 - #48 5
INFO  05:39:32,964 - #46 ;
INFO  05:39:32,964 - #7 else
INFO  05:39:32,964 - #39 {
INFO  05:39:32,965 - #47 x
INFO  05:39:32,965 - #23 =
INFO  05:39:32,965 - #48 7
INFO  05:39:32,965 - #46 ;
INFO  05:39:32,965 - #40 }
INFO  05:39:32,965 - #10 print
INFO  05:39:32,966 - #37 (
INFO  05:39:32,966 - #47 x
INFO  05:39:32,966 - #38 )
INFO  05:39:32,966 - #46 ;
INFO  05:39:32,966 - #40 }
INFO  05:39:32,966 - #40 }
INFO  05:39:32,973 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  ProgramVarDeclarations(
    ProgramVarDeclarations(
      NoProgramVarDeclarations(
      ) [NoProgramVarDeclarations]
      VarProgramVarDeclaration(
        GlobalVarDeclaration(
          VarDecl(
            Type(
             int
            ) [Type]
            VarNamesList(
              VarNameSingle(
                VarNamePartSingle(
                 x
                ) [VarNamePartSingle]
              ) [VarNameSingle]
              VarNamePartSingle(
               y
              ) [VarNamePartSingle]
            ) [VarNamesList]
          ) [VarDecl]
        ) [GlobalVarDeclaration]
      ) [VarProgramVarDeclaration]
    ) [ProgramVarDeclarations]
    VarProgramVarDeclaration(
      GlobalVarDeclaration(
        VarDecl(
          Type(
           bool
          ) [Type]
          VarNameSingle(
            VarNamePartSingle(
             z
            ) [VarNamePartSingle]
          ) [VarNameSingle]
        ) [VarDecl]
      ) [GlobalVarDeclaration]
    ) [VarProgramVarDeclaration]
  ) [ProgramVarDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDeclaration(
      MethodReturnVoid(
      ) [MethodReturnVoid]
      MethodName(
       main
      ) [MethodName]
      NoMethodParams(
      ) [NoMethodParams]
      NoVarDeclarationList(
      ) [NoVarDeclarationList]
      StmtList(
        StmtList(
          StmtList(
            NoStmtList(
            ) [NoStmtList]
            SingleStmt(
              DesignatorSingleStmt(
                DesingatorStatementAssignOpClass(
                  DesignatorStmtAssignOp(
                    DesignatorNamed(
                     x
                    ) [DesignatorNamed]
                    AssignOp(
                    ) [AssignOp]
                    SignExpression(
                      ExprInfoMoreOnly(
                        NoExprSign(
                        ) [NoExprSign]
                        ExprInfoSingle(
                          SingleTerm(
                            FactorConst(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [FactorConst]
                          ) [SingleTerm]
                        ) [ExprInfoSingle]
                      ) [ExprInfoMoreOnly]
                    ) [SignExpression]
                  ) [DesignatorStmtAssignOp]
                ) [DesingatorStatementAssignOpClass]
              ) [DesignatorSingleStmt]
            ) [SingleStmt]
          ) [StmtList]
          SingleStmt(
            IfSingleStmt(
              IfPartSingleStmt(
                StartIfLooping(
                ) [StartIfLooping]
                IfConditionSuccess(
                  NoOrCondition(
                    NoAndCondTerm(
                      CondFactRelOp(
                        SignExpression(
                          ExprInfoMoreOnly(
                            NoExprSign(
                            ) [NoExprSign]
                            ExprInfoSingle(
                              SingleTerm(
                                FactorDesignator(
                                  DesignatorNamed(
                                   x
                                  ) [DesignatorNamed]
                                ) [FactorDesignator]
                              ) [SingleTerm]
                            ) [ExprInfoSingle]
                          ) [ExprInfoMoreOnly]
                        ) [SignExpression]
                        RelOpNotEqual(
                        ) [RelOpNotEqual]
                        SignExpression(
                          ExprInfoMoreOnly(
                            NoExprSign(
                            ) [NoExprSign]
                            ExprInfoSingle(
                              SingleTerm(
                                FactorConst(
                                  NumConst(
                                   1
                                  ) [NumConst]
                                ) [FactorConst]
                              ) [SingleTerm]
                            ) [ExprInfoSingle]
                          ) [ExprInfoMoreOnly]
                        ) [SignExpression]
                      ) [CondFactRelOp]
                    ) [NoAndCondTerm]
                  ) [NoOrCondition]
                ) [IfConditionSuccess]
                SingleStmt(
                  DesignatorSingleStmt(
                    DesingatorStatementAssignOpClass(
                      DesignatorStmtAssignOp(
                        DesignatorNamed(
                         x
                        ) [DesignatorNamed]
                        AssignOp(
                        ) [AssignOp]
                        SignExpression(
                          ExprInfoMoreOnly(
                            NoExprSign(
                            ) [NoExprSign]
                            ExprInfoSingle(
                              SingleTerm(
                                FactorConst(
                                  NumConst(
                                   5
                                  ) [NumConst]
                                ) [FactorConst]
                              ) [SingleTerm]
                            ) [ExprInfoSingle]
                          ) [ExprInfoMoreOnly]
                        ) [SignExpression]
                      ) [DesignatorStmtAssignOp]
                    ) [DesingatorStatementAssignOpClass]
                  ) [DesignatorSingleStmt]
                ) [SingleStmt]
              ) [IfPartSingleStmt]
              ElsePartStmt(
                StartElseLooping(
                ) [StartElseLooping]
                MultipleStmt(
                  Stmts(
                    StmtList(
                      NoStmtList(
                      ) [NoStmtList]
                      SingleStmt(
                        DesignatorSingleStmt(
                          DesingatorStatementAssignOpClass(
                            DesignatorStmtAssignOp(
                              DesignatorNamed(
                               x
                              ) [DesignatorNamed]
                              AssignOp(
                              ) [AssignOp]
                              SignExpression(
                                ExprInfoMoreOnly(
                                  NoExprSign(
                                  ) [NoExprSign]
                                  ExprInfoSingle(
                                    SingleTerm(
                                      FactorConst(
                                        NumConst(
                                         7
                                        ) [NumConst]
                                      ) [FactorConst]
                                    ) [SingleTerm]
                                  ) [ExprInfoSingle]
                                ) [ExprInfoMoreOnly]
                              ) [SignExpression]
                            ) [DesignatorStmtAssignOp]
                          ) [DesingatorStatementAssignOpClass]
                        ) [DesignatorSingleStmt]
                      ) [SingleStmt]
                    ) [StmtList]
                  ) [Stmts]
                ) [MultipleStmt]
              ) [ElsePartStmt]
            ) [IfSingleStmt]
          ) [SingleStmt]
        ) [StmtList]
        SingleStmt(
          PrintSingleStmt(
            PrintSingleStmtExpr(
              SignExpression(
                ExprInfoMoreOnly(
                  NoExprSign(
                  ) [NoExprSign]
                  ExprInfoSingle(
                    SingleTerm(
                      FactorDesignator(
                        DesignatorNamed(
                         x
                        ) [DesignatorNamed]
                      ) [FactorDesignator]
                    ) [SingleTerm]
                  ) [ExprInfoSingle]
                ) [ExprInfoMoreOnly]
              ) [SignExpression]
            ) [PrintSingleStmtExpr]
          ) [PrintSingleStmt]
        ) [SingleStmt]
      ) [StmtList]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  05:39:32,973 - ===================================
INFO  05:39:32,977 - start main na liniji 3
INFO  05:39:32,977 - Global variable int x declared
INFO  05:39:32,977 - Global variable int y declared
INFO  05:39:32,977 - Global variable bool z declared
INFO  05:39:32,977 - Method returns void
INFO  05:39:32,977 - start method main na liniji 8
INFO  05:39:32,977 - Local variable x used na liniji 10
INFO  05:39:32,978 - Local variable x used na liniji 12
INFO  05:39:32,978 - Local variable x used na liniji 13
INFO  05:39:32,978 - Local variable x used na liniji 15
INFO  05:39:32,978 - Local variable x used na liniji 18
INFO  05:39:32,978 - end main na liniji 3
INFO  05:39:32,978 - ===================================
INFO  05:39:32,982 - Well done bye
