// generated with ast extension for cup
// version 0.8
// 26/7/2022 6:34:7


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(Factor Factor);
    public void visit(ExprInfo ExprInfo);
    public void visit(Statement Statement);
    public void visit(MethodPars MethodPars);
    public void visit(ClassVarNameList ClassVarNameList);
    public void visit(ClassMethods ClassMethods);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(VarNameList VarNameList);
    public void visit(ProgramVarDeclarationPart ProgramVarDeclarationPart);
    public void visit(FactorNewPars FactorNewPars);
    public void visit(StartIfLoop StartIfLoop);
    public void visit(IfCondition IfCondition);
    public void visit(Expr Expr);
    public void visit(OptArgs OptArgs);
    public void visit(ExprSign ExprSign);
    public void visit(ConstNameList ConstNameList);
    public void visit(SingleOptArg SingleOptArg);
    public void visit(RelOp RelOp);
    public void visit(PrintSingleStatement PrintSingleStatement);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(ClassExtendsDecl ClassExtendsDecl);
    public void visit(DesignatorOperation DesignatorOperation);
    public void visit(OptionalArgs OptionalArgs);
    public void visit(ExprInfoMore ExprInfoMore);
    public void visit(Condition Condition);
    public void visit(FirstClassMethod FirstClassMethod);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ClassVarNamePart ClassVarNamePart);
    public void visit(StatementList StatementList);
    public void visit(VarNamePart VarNamePart);
    public void visit(ProgramVarDeclarationList ProgramVarDeclarationList);
    public void visit(FactorActPars FactorActPars);
    public void visit(FormParamId FormParamId);
    public void visit(StartWhileCondition StartWhileCondition);
    public void visit(ClassMethodsDecl ClassMethodsDecl);
    public void visit(MulOp MulOp);
    public void visit(CondTerm CondTerm);
    public void visit(ElsePartStatement ElsePartStatement);
    public void visit(StartElseLoop StartElseLoop);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(AddOp AddOp);
    public void visit(ConstValue ConstValue);
    public void visit(IfPartStatement IfPartStatement);
    public void visit(Statements Statements);
    public void visit(ClassVarDeclList ClassVarDeclList);
    public void visit(DesignatorStatementAssignOp DesignatorStatementAssignOp);
    public void visit(FormParam FormParam);
    public void visit(ActPars ActPars);
    public void visit(Designator Designator);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(ActParsList ActParsList);
    public void visit(SingleStatement SingleStatement);
    public void visit(Term Term);
    public void visit(StartDoWhileLoop StartDoWhileLoop);
    public void visit(MethodReturnType MethodReturnType);
    public void visit(Type Type);
    public void visit(MulOpMod MulOpMod);
    public void visit(MulOpDiv MulOpDiv);
    public void visit(MulOpMul MulOpMul);
    public void visit(AddOpMinus AddOpMinus);
    public void visit(AddOpPlus AddOpPlus);
    public void visit(RelOpLEQ RelOpLEQ);
    public void visit(RelOpLess RelOpLess);
    public void visit(RelOpGEQ RelOpGEQ);
    public void visit(RelOpGreater RelOpGreater);
    public void visit(RelOpNotEqual RelOpNotEqual);
    public void visit(RelOpEqual RelOpEqual);
    public void visit(AssignOp AssignOp);
    public void visit(NoFactorNewParams NoFactorNewParams);
    public void visit(FactorNewParams FactorNewParams);
    public void visit(NoFactorActualPars NoFactorActualPars);
    public void visit(FactorActualParsEmpty FactorActualParsEmpty);
    public void visit(FactorActualPars FactorActualPars);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorSuperNoActual FactorSuperNoActual);
    public void visit(FactorSuper FactorSuper);
    public void visit(FactorConst FactorConst);
    public void visit(FactorDesignatorFunctionArgs FactorDesignatorFunctionArgs);
    public void visit(FactorDesignatorFunction FactorDesignatorFunction);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(SingleTerm SingleTerm);
    public void visit(MultipleTerm MultipleTerm);
    public void visit(NoExprSign NoExprSign);
    public void visit(NegativeExprSign NegativeExprSign);
    public void visit(ExprInfoSingle ExprInfoSingle);
    public void visit(ExprInfoMultiple ExprInfoMultiple);
    public void visit(ExprInfoMoreOnly ExprInfoMoreOnly);
    public void visit(NullischoExpression NullischoExpression);
    public void visit(SignExpression SignExpression);
    public void visit(SingleActPars SingleActPars);
    public void visit(MultipleActPars MultipleActPars);
    public void visit(ActualPars ActualPars);
    public void visit(DesignatorStmtAssignOpError DesignatorStmtAssignOpError);
    public void visit(DesignatorStmtAssignOp DesignatorStmtAssignOp);
    public void visit(DesignatorNoActPars DesignatorNoActPars);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorActPars DesignatorActPars);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(DesignatorThis DesignatorThis);
    public void visit(DesignatorNamed DesignatorNamed);
    public void visit(DesignatorStatementSuperNoPars DesignatorStatementSuperNoPars);
    public void visit(DesignatorStatementSuper DesignatorStatementSuper);
    public void visit(DesingatorStatementAssignOpClass DesingatorStatementAssignOpClass);
    public void visit(DesignatorStatementClass DesignatorStatementClass);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(CondFactRelOp CondFactRelOp);
    public void visit(NoAndCondTerm NoAndCondTerm);
    public void visit(AndCondTerm AndCondTerm);
    public void visit(NoOrCondition NoOrCondition);
    public void visit(OrCondition OrCondition);
    public void visit(NoElsePartStmt NoElsePartStmt);
    public void visit(ElsePartStmt ElsePartStmt);
    public void visit(IfConditionError IfConditionError);
    public void visit(IfConditionSuccess IfConditionSuccess);
    public void visit(IfPartSingleStmt IfPartSingleStmt);
    public void visit(PrintSingleStmtExpr PrintSingleStmtExpr);
    public void visit(PrintSingleStmtNumber PrintSingleStmtNumber);
    public void visit(StartElseLooping StartElseLooping);
    public void visit(StartIfLooping StartIfLooping);
    public void visit(StartDoWhileLooping StartDoWhileLooping);
    public void visit(StartWhileLoopCondition StartWhileLoopCondition);
    public void visit(PrintSingleStmt PrintSingleStmt);
    public void visit(ReadSingleStmt ReadSingleStmt);
    public void visit(ReturnVoidSingleStmt ReturnVoidSingleStmt);
    public void visit(ReturnExprSingleStmt ReturnExprSingleStmt);
    public void visit(ContinueSingleStmt ContinueSingleStmt);
    public void visit(BreakSingleStmt BreakSingleStmt);
    public void visit(WhileSingleStmt WhileSingleStmt);
    public void visit(IfSingleStmt IfSingleStmt);
    public void visit(DesignatorSingleStmt DesignatorSingleStmt);
    public void visit(Stmts Stmts);
    public void visit(MultipleStmt MultipleStmt);
    public void visit(SingleStmt SingleStmt);
    public void visit(NoStmtList NoStmtList);
    public void visit(StmtList StmtList);
    public void visit(OptionalArg OptionalArg);
    public void visit(SingleOptionalArgsList SingleOptionalArgsList);
    public void visit(MultipleOptionalArgsList MultipleOptionalArgsList);
    public void visit(FormParamArray FormParamArray);
    public void visit(FormParamSingle FormParamSingle);
    public void visit(FormalParam FormalParam);
    public void visit(FormalParsError FormalParsError);
    public void visit(FormalParsSingle FormalParsSingle);
    public void visit(FormalParsList FormalParsList);
    public void visit(NoMethodParams NoMethodParams);
    public void visit(MethodParamsOpt MethodParamsOpt);
    public void visit(MethodParamsForm MethodParamsForm);
    public void visit(MethodParamsFormOpt MethodParamsFormOpt);
    public void visit(MethodReturnVoid MethodReturnVoid);
    public void visit(MethodReturnVal MethodReturnVal);
    public void visit(MethodName MethodName);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ConstructorDeclaration ConstructorDeclaration);
    public void visit(NoConstructor NoConstructor);
    public void visit(ConstructorExists ConstructorExists);
    public void visit(NoClassMethodsDeclaration NoClassMethodsDeclaration);
    public void visit(ClassMethodsDeclaration ClassMethodsDeclaration);
    public void visit(NoClassMethods NoClassMethods);
    public void visit(ClassMethodList ClassMethodList);
    public void visit(ClassVarNamePartArray ClassVarNamePartArray);
    public void visit(ClassVarNamePartSingle ClassVarNamePartSingle);
    public void visit(ClassVarNameSingle ClassVarNameSingle);
    public void visit(ClassVarNamesList ClassVarNamesList);
    public void visit(ClassVarDecl ClassVarDecl);
    public void visit(ClassVarDeclarationsError ClassVarDeclarationsError);
    public void visit(NoClassVarDeclarations NoClassVarDeclarations);
    public void visit(ClassVarDeclarations ClassVarDeclarations);
    public void visit(ClassInfo ClassInfo);
    public void visit(ClassExtendsError ClassExtendsError);
    public void visit(BaseClass BaseClass);
    public void visit(SuperClass SuperClass);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarNamePartArray VarNamePartArray);
    public void visit(VarNamePartSingle VarNamePartSingle);
    public void visit(VarNameSingle VarNameSingle);
    public void visit(VarNamesList VarNamesList);
    public void visit(VarDecl VarDecl);
    public void visit(NoVarDeclarationList NoVarDeclarationList);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(GlobalVarDeclarationError GlobalVarDeclarationError);
    public void visit(GlobalVarDeclaration GlobalVarDeclaration);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstNamePart ConstNamePart);
    public void visit(ConstNameSingle ConstNameSingle);
    public void visit(ConstNames ConstNames);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoConstDeclList NoConstDeclList);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ClassProgramVarDeclaration ClassProgramVarDeclaration);
    public void visit(VarProgramVarDeclaration VarProgramVarDeclaration);
    public void visit(ConstProgramVarDeclaration ConstProgramVarDeclaration);
    public void visit(NoProgramVarDeclarations NoProgramVarDeclarations);
    public void visit(ProgramVarDeclarations ProgramVarDeclarations);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
